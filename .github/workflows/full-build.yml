name: Full Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  python_version: '3.12'
  mainline_build: ${{ github.ref == 'refs/heads/main' || github.event.label.name == 'translation' || github.event_name == 'release' }}
  PYTHONWARNDEFAULTENCODING: 'true'

jobs:
  linux-wheel:
    name: Linux with Python
    runs-on: ubuntu-22.04
    container: fedora:39
    timeout-minutes: 15
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    steps:
      - name: Install Linux Dependencies
        run: >
          dnf install -y gcc git pkg-config python-launcher upx
          python${{ env.python_version }}-devel
      - uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Set ownership of checkout directory
        run: chown -R $(id -u):$(id -g) $PWD
      - name: Use Python Dependency Cache
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-python${{ env.python-version }}-${{ hashFiles('**/poetry.lock') }}-39
      - name: Install Poetry
        run: |
          python3 -m ensurepip
          python3 -m pip install poetry
      - name: Configure Poetry
        run: poetry config virtualenvs.in-project true
      - name: Install Python Dependencies
        run: |
          poetry install --no-interaction --no-root
      - name: Run Tests
        run: |
            poetry run pytest
      - name: List Directory
        run: ls -l
